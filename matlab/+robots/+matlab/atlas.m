function robot = atlas(dataFormat)
%atlas Create rigidBodyTree for the robot model
%   ROBOT = atlas(DATAFORMAT) constructs a rigidBodyTree, ROBOT, and sets the
%   data format to DATAFORMAT. The possible values of DATAFORMAT are 
%   'struct', 'column' and 'row'. The default value is 'column', which 
%   matches the data format of the rigidbodytree object used to generate 
%   this function.

%   Auto-generated by MATLAB on 29-Mar-2022 12:33:50

%#codegen

narginchk(0,1);
if ~nargin==1
dataFormat='column';
end
robot = rigidBodyTree('MaxNumBodies', 20, 'DataFormat', dataFormat);
robot.Gravity = [                     0,                      0,                      0];
robot.BaseName = 'base';


% Add body, 'base2', and joint, 'base2'
bodyName = 'base2';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'base';
jointName = 'base2';
jointType = 'fixed';
T_Joint_to_Parent = [                     1,                      0,                      0,                      0; ...
                                          0,                      1,                      0,                      0; ...
                                          0,                      0,                      1,                      0; ...
                                          0,                      0,                      0,                      1];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(T_Joint_to_Parent);
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L1', and joint, 'J1'
bodyName = 'L1';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'base2';
jointName = 'J1';
jointType = 'revolute';
dhparams = [                0.1115,                      0,                  0.862,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L2', and joint, 'J2'
bodyName = 'L2';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L1';
jointName = 'J2';
jointType = 'revolute';
T_Joint_to_Parent = [                     1,                      0,                      0,                      0; ...
                                          0,                      1,                      0,                      0; ...
                                          0,                      0,                      1,                      0; ...
                                          0,                      0,                      0,                      1];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(T_Joint_to_Parent);
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L3', and joint, 'J3'
bodyName = 'L3';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L2';
jointName = 'J3';
jointType = 'revolute';
dhparams = [                -0.422,                      0,                      0,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L4', and joint, 'J4'
bodyName = 'L4';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L3';
jointName = 'J4';
jointType = 'revolute';
dhparams = [           0.377327444,                      0,                      0,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L5', and joint, 'J5'
bodyName = 'L5';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L4';
jointName = 'J5';
jointType = 'revolute';
dhparams = [                 0.066,           1.5707963268,                -0.0225,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L6', and joint, 'J6'
bodyName = 'L6';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L5';
jointName = 'J6';
jointType = 'revolute';
dhparams = [                     0,                      0,                  -0.05,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L7', and joint, 'J7'
bodyName = 'L7';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L6';
jointName = 'J7';
jointType = 'revolute';
dhparams = [          0.0898735222,                      0,                      0,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L8', and joint, 'J8'
bodyName = 'L8';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L7';
jointName = 'J8';
jointType = 'revolute';
dhparams = [                     0,          -1.5707963268,                 -0.162,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L9', and joint, 'J9'
bodyName = 'L9';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L8';
jointName = 'J9';
jointType = 'revolute';
dhparams = [                  0.05,                      0,                      0,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L10', and joint, 'J10'
bodyName = 'L10';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L9';
jointName = 'J10';
jointType = 'revolute';
dhparams = [               -0.2256,                      0,                -0.1406,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L11', and joint, 'J11'
bodyName = 'L11';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L10';
jointName = 'J11';
jointType = 'revolute';
dhparams = [                 -0.11,          -1.5707963268,                 0.7226,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L12', and joint, 'J12'
bodyName = 'L12';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L11';
jointName = 'J12';
jointType = 'revolute';
dhparams = [                 0.016,                      0,                      0,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L13', and joint, 'J13'
bodyName = 'L13';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L12';
jointName = 'J13';
jointType = 'revolute';
dhparams = [               -0.0092,          -1.5707963268,                 -0.068,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L14', and joint, 'J14'
bodyName = 'L14';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L13';
jointName = 'J14';
jointType = 'revolute';
dhparams = [  0.009209999999999999,           1.5707963268,                      0,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L15', and joint, 'J15'
bodyName = 'L15';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L14';
jointName = 'J15';
jointType = 'revolute';
dhparams = [                     0,          -1.5707963268,               -0.29955,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'L16', and joint, 'J16'
bodyName = 'L16';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L15';
jointName = 'J16';
jointType = 'revolute';
dhparams = [                     0,           1.5707963268,                      0,                      0];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(dhparams, 'dh');
jointAxis = [                     0,                      0,                      1];
jointPositionLimits = [    -3.141592653589793,      3.141592653589793];
jointHomePosition =                      0;
joint.PositionLimits = jointPositionLimits;
joint.JointAxis = jointAxis;
joint.HomePosition = jointHomePosition;
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


% Add body, 'tool', and joint, 'tool'
bodyName = 'tool';
bodyMass =                      1;
bodyCoM = [                     0,                      0,                      0];
bodyInertia = [                     1,                      1,                      1,                      0,                      0,                      0];
parentName = 'L16';
jointName = 'tool';
jointType = 'fixed';
T_Joint_to_Parent = [                     1,                      0,                      0,                      0; ...
                                          0,                      1,                      0,                      0; ...
                                          0,                      0,                      1,                      0; ...
                                          0,                      0,                      0,                      1];

joint = rigidBodyJoint(jointName, jointType);
joint.setFixedTransform(T_Joint_to_Parent);
body = rigidBody(bodyName, "MaxNumCollisions", 0);

body.Joint = joint;
body.Mass = bodyMass;
body.CenterOfMass = bodyCoM;
body.Inertia = bodyInertia;
robot.addBody(body, parentName);


